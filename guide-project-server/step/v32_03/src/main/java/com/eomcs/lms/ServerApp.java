/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.eomcs.lms;

import java.io.IOException;
import java.io.PrintStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import com.eomcs.lms.context.ApplicationContextListener;
import com.eomcs.lms.domain.Board;
import com.eomcs.lms.domain.Lesson;
import com.eomcs.lms.domain.Member;

public class ServerApp {

  Set<ApplicationContextListener> listeners = new LinkedHashSet<>();
  Map<String, Object> context = new HashMap<>();

  public void addApplicationContextListener(ApplicationContextListener listener) {
    listeners.add(listener);
  }

  public void removeApplicationContextListener(ApplicationContextListener listener) {
    listeners.remove(listener);
  }

  private void notifyApplicationInitialized() {
    for (ApplicationContextListener listener : listeners) {
      listener.contextInitialized(context);
    }
  }

  private void notifyApplicationDestroyed() {
    for (ApplicationContextListener listener : listeners) {
      listener.contextDestroyed(context);
    }
  }

  @SuppressWarnings("unchecked")
  public void service() {
    notifyApplicationInitialized();

    List<Board> boardList = (List<Board>) context.get("boardList");
    List<Lesson> lessonList = (List<Lesson>) context.get("lessonList");
    List<Member> memberList = (List<Member>) context.get("memberList");

    notifyApplicationDestroyed();
  }

  public static void main(String[] args) throws UnknownHostException, IOException {
    ServerApp app = new ServerApp();
    app.addApplicationContextListener(new DataLoaderListener());
    app.service();
    // System.out.println("서버 수업 관리 시스템입니다.");
    // try (ServerSocket serverSocket = new ServerSocket(12345)) {
    // System.out.println("클라이언트 연결 대기중");
    // while (true) {
    // Socket socket = serverSocket.accept();
    // processRequest(socket);
    // System.out.println("--------------------------------------------------");
    // }
    // } catch (Exception e) {
    // System.out.println("서버 준비중 오류 발생");
    // e.printStackTrace();
    // return;
    // }
  }

  public static void processRequest(Socket clientSocket) throws Exception {
    try (Socket socket = clientSocket;
        Scanner in = new Scanner(socket.getInputStream());
        PrintStream out = new PrintStream(socket.getOutputStream())) {
      System.out.println("통신을 위한 입출력 스트림을 준비하였음");
      String message = in.nextLine();
      System.out.println(message);
      out.println("echo message : " + message);
    } catch (Exception e) {
      System.out.println("Exception occurs");
      e.printStackTrace();
    }
  }
}
